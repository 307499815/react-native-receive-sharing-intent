{"version":3,"sources":["ReceiveSharingIntent.ts"],"names":["ReceiveSharingIntent","NativeModules","ReceiveSharingIntentModule","Platform","OS","Utils","getReceivedFiles","handler","errorHandler","protocol","isIos","Linking","getInitialURL","then","res","startsWith","getFileNames","catch","addEventListener","url","AppState","status","data","files","utils","sortData","e","fileObject","Object","keys","map","k"],"mappings":";;;;;;;AACA;;AACA;;;;;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAA2BC,0BAAjC;;AAEA,MAAMC,0BAAN,CAAkE;AAAA;AAAA,mCACrCC,sBAASC,EAAT,KAAgB,KADqB;;AAAA,mCAEtC,IAAIC,cAAJ,EAFsC;AAAA;;AAI9DC,EAAAA,gBAAgB,CAACC,OAAD,EAAoBC,YAApB,EAA4CC,QAAgB,GAAG,YAA/D,EAA4E;AACxF,QAAG,KAAKC,KAAR,EAAc;AACVC,2BAAQC,aAAR,GAAwBC,IAAxB,CAA6BC,GAAG,IAAI;AAChC,YAAIA,GAAG,IAAIA,GAAG,CAACC,UAAJ,CAAgB,GAAEN,QAAS,YAA3B,CAAX,EAAoD;AAChD,eAAKO,YAAL,CAAkBT,OAAlB,EAA2BC,YAA3B,EAAyCM,GAAzC;AACH;AACJ,OAJD,EAIGG,KAJH,CAIS,MAAM,CAAG,CAJlB;;AAKAN,2BAAQO,gBAAR,CAAyB,KAAzB,EAAiCJ,GAAD,IAAS;AACrC,cAAMK,GAAG,GAAGL,GAAG,GAAGA,GAAG,CAACK,GAAP,GAAa,EAA5B;;AACA,YAAIA,GAAG,CAACJ,UAAJ,CAAgB,GAAEN,QAAS,YAA3B,CAAJ,EAA6C;AACzC,eAAKO,YAAL,CAAkBT,OAAlB,EAA0BC,YAA1B,EAAwCM,GAAG,CAACK,GAA5C;AACH;AACJ,OALD;AAMH,KAZD,MAYK;AACDC,4BAASF,gBAAT,CAA0B,QAA1B,EAAqCG,MAAD,IAAoB;AACpD,YAAIA,MAAM,KAAK,QAAf,EAAyB;AACrB,eAAKL,YAAL,CAAkBT,OAAlB,EAA0BC,YAA1B,EAAwC,EAAxC;AACH;AACF,OAJH;;AAKA,WAAKQ,YAAL,CAAkBT,OAAlB,EAA0BC,YAA1B,EAAwC,EAAxC;AACH;AACJ;;AAGQQ,EAAAA,YAAY,CAACT,OAAD,EAAoBC,YAApB,EAA4CW,GAA5C,EAAwD;AACzE,QAAG,KAAKT,KAAR,EAAc;AACVV,MAAAA,oBAAoB,CAACgB,YAArB,CAAkCG,GAAlC,EAAuCN,IAAvC,CAA6CS,IAAD,IAAa;AACpD,YAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBH,IAApB,CAAZ;AACAf,QAAAA,OAAO,CAACgB,KAAD,CAAP;AACJ,OAHD,EAGGN,KAHH,CAGUS,CAAD,IAASlB,YAAY,CAACkB,CAAD,CAH9B;AAIH,KALD,MAKK;AACD1B,MAAAA,oBAAoB,CAACgB,YAArB,GAAoCH,IAApC,CAA0Cc,UAAD,IAAqB;AAC1D,YAAIJ,KAAK,GAAGK,MAAM,CAACC,IAAP,CAAYF,UAAZ,EAAwBG,GAAxB,CAA6BC,CAAD,IAAOJ,UAAU,CAACI,CAAD,CAA7C,CAAZ;AACAxB,QAAAA,OAAO,CAACgB,KAAD,CAAP;AACH,OAHD,EAGGN,KAHH,CAGUS,CAAD,IAASlB,YAAY,CAACkB,CAAD,CAH9B;AAIH;AACJ;;AAxC6D;;eA6CnDxB,0B","sourcesContent":["import type { IReceiveSharingIntent, IUtils } from \"./ReceiveSharingIntent.interfaces\";\nimport { Platform, Linking, AppState, NativeModules } from \"react-native\";\nimport  Utils from \"./utils\";\n\nconst { ReceiveSharingIntent } = NativeModules;\n\nclass ReceiveSharingIntentModule implements IReceiveSharingIntent {\n    private isIos: boolean = Platform.OS === \"ios\";\n    private utils: IUtils = new Utils();\n\n    getReceivedFiles(handler: Function, errorHandler: Function, protocol: string = \"ShareMedia\"){\n        if(this.isIos){\n            Linking.getInitialURL().then(res => {\n                if (res && res.startsWith(`${protocol}://dataUrl`)) {\n                    this.getFileNames(handler, errorHandler, res);\n                }\n            }).catch(() => { });\n            Linking.addEventListener(\"url\", (res) => {\n                const url = res ? res.url : \"\";\n                if (url.startsWith(`${protocol}://dataUrl`)) {\n                    this.getFileNames(handler,errorHandler, res.url);\n                }\n            });\n        }else{\n            AppState.addEventListener('change', (status: string) => {\n                if (status === 'active') {\n                    this.getFileNames(handler,errorHandler, \"\");\n                }\n              });\n            this.getFileNames(handler,errorHandler, \"\");\n        }\n    }\n\n\n   protected getFileNames(handler: Function, errorHandler: Function, url: string){\n        if(this.isIos){\n            ReceiveSharingIntent.getFileNames(url).then((data: any)=>{         \n                 let files = this.utils.sortData(data);\n                 handler(files);\n            }).catch((e:any)=>errorHandler(e));\n        }else{\n            ReceiveSharingIntent.getFileNames().then((fileObject: any) => {\n                let files = Object.keys(fileObject).map((k) => fileObject[k])\n                handler(files);\n            }).catch((e:any)=>errorHandler(e));\n        }\n    }\n\n    \n}\n\nexport default ReceiveSharingIntentModule;"]}