{"version":3,"sources":["ReceiveSharingIntent.ts"],"names":["Platform","Linking","AppState","NativeModules","Utils","ReceiveSharingIntent","ReceiveSharingIntentModule","OS","getReceivedFiles","handler","errorHandler","protocol","isIos","getInitialURL","then","res","startsWith","getFileNames","catch","addEventListener","url","status","data","files","utils","sortData","e","fileObject","Object","keys","map","k"],"mappings":";;AACA,SAASA,QAAT,EAAmBC,OAAnB,EAA4BC,QAA5B,EAAsCC,aAAtC,QAA2D,cAA3D;AACA,OAAQC,KAAR,MAAmB,SAAnB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAA2BF,aAAjC;;AAEA,MAAMG,0BAAN,CAAkE;AAAA;AAAA,mCACrCN,QAAQ,CAACO,EAAT,KAAgB,KADqB;;AAAA,mCAEtC,IAAIH,KAAJ,EAFsC;AAAA;;AAI9DI,EAAAA,gBAAgB,CAACC,OAAD,EAAoBC,YAApB,EAA4CC,QAAgB,GAAG,YAA/D,EAA4E;AACxF,QAAG,KAAKC,KAAR,EAAc;AACVX,MAAAA,OAAO,CAACY,aAAR,GAAwBC,IAAxB,CAA8BC,GAAD,IAAa;AACtC,YAAIA,GAAG,IAAIA,GAAG,CAACC,UAAJ,CAAgB,GAAEL,QAAS,YAA3B,CAAX,EAAoD;AAChD,eAAKM,YAAL,CAAkBR,OAAlB,EAA2BC,YAA3B,EAAyCK,GAAzC;AACH;AACJ,OAJD,EAIGG,KAJH,CAIS,MAAM,CAAG,CAJlB;AAKAjB,MAAAA,OAAO,CAACkB,gBAAR,CAAyB,KAAzB,EAAiCJ,GAAD,IAAa;AACzC,cAAMK,GAAG,GAAGL,GAAG,GAAGA,GAAG,CAACK,GAAP,GAAa,EAA5B;;AACA,YAAIA,GAAG,CAACJ,UAAJ,CAAgB,GAAEL,QAAS,YAA3B,CAAJ,EAA6C;AACzC,eAAKM,YAAL,CAAkBR,OAAlB,EAA0BC,YAA1B,EAAwCK,GAAG,CAACK,GAA5C;AACH;AACJ,OALD;AAMH,KAZD,MAYK;AACDlB,MAAAA,QAAQ,CAACiB,gBAAT,CAA0B,QAA1B,EAAqCE,MAAD,IAAoB;AACpD,YAAIA,MAAM,KAAK,QAAf,EAAyB;AACrB,eAAKJ,YAAL,CAAkBR,OAAlB,EAA0BC,YAA1B,EAAwC,EAAxC;AACH;AACF,OAJH;AAKA,WAAKO,YAAL,CAAkBR,OAAlB,EAA0BC,YAA1B,EAAwC,EAAxC;AACH;AACJ;;AAGQO,EAAAA,YAAY,CAACR,OAAD,EAAoBC,YAApB,EAA4CU,GAA5C,EAAwD;AACzE,QAAG,KAAKR,KAAR,EAAc;AACVP,MAAAA,oBAAoB,CAACY,YAArB,CAAkCG,GAAlC,EAAuCN,IAAvC,CAA6CQ,IAAD,IAAa;AACpD,YAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBH,IAApB,CAAZ;AACAb,QAAAA,OAAO,CAACc,KAAD,CAAP;AACJ,OAHD,EAGGL,KAHH,CAGUQ,CAAD,IAAShB,YAAY,CAACgB,CAAD,CAH9B;AAIH,KALD,MAKK;AACDrB,MAAAA,oBAAoB,CAACY,YAArB,GAAoCH,IAApC,CAA0Ca,UAAD,IAAqB;AAC1D,YAAIJ,KAAK,GAAGK,MAAM,CAACC,IAAP,CAAYF,UAAZ,EAAwBG,GAAxB,CAA6BC,CAAD,IAAOJ,UAAU,CAACI,CAAD,CAA7C,CAAZ;AACAtB,QAAAA,OAAO,CAACc,KAAD,CAAP;AACH,OAHD,EAGGL,KAHH,CAGUQ,CAAD,IAAShB,YAAY,CAACgB,CAAD,CAH9B;AAIH;AACJ;;AAxC6D;;AA6ClE,eAAepB,0BAAf","sourcesContent":["import type { IReceiveSharingIntent, IUtils } from \"./ReceiveSharingIntent.interfaces\";\nimport { Platform, Linking, AppState, NativeModules } from \"react-native\";\nimport  Utils from \"./utils\";\n\nconst { ReceiveSharingIntent } = NativeModules;\n\nclass ReceiveSharingIntentModule implements IReceiveSharingIntent {\n    private isIos: boolean = Platform.OS === \"ios\";\n    private utils: IUtils = new Utils();\n\n    getReceivedFiles(handler: Function, errorHandler: Function, protocol: string = \"ShareMedia\"){\n        if(this.isIos){\n            Linking.getInitialURL().then((res:any) => {\n                if (res && res.startsWith(`${protocol}://dataUrl`)) {\n                    this.getFileNames(handler, errorHandler, res);\n                }\n            }).catch(() => { });\n            Linking.addEventListener(\"url\", (res:any) => {\n                const url = res ? res.url : \"\";\n                if (url.startsWith(`${protocol}://dataUrl`)) {\n                    this.getFileNames(handler,errorHandler, res.url);\n                }\n            });\n        }else{\n            AppState.addEventListener('change', (status: string) => {\n                if (status === 'active') {\n                    this.getFileNames(handler,errorHandler, \"\");\n                }\n              });\n            this.getFileNames(handler,errorHandler, \"\");\n        }\n    }\n\n\n   protected getFileNames(handler: Function, errorHandler: Function, url: string){\n        if(this.isIos){\n            ReceiveSharingIntent.getFileNames(url).then((data: any)=>{         \n                 let files = this.utils.sortData(data);\n                 handler(files);\n            }).catch((e:any)=>errorHandler(e));\n        }else{\n            ReceiveSharingIntent.getFileNames().then((fileObject: any) => {\n                let files = Object.keys(fileObject).map((k) => fileObject[k])\n                handler(files);\n            }).catch((e:any)=>errorHandler(e));\n        }\n    }\n\n    \n}\n\nexport default ReceiveSharingIntentModule;"]}